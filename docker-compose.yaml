services:
  postgres:
    image: postgres:15
    container_name: clean_arch_postgres
    environment:
      POSTGRES_DB: clean_arch_db
      POSTGRES_USER: ramon
      POSTGRES_PASSWORD: 1234
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    networks:
      - clean_arch_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ramon -d clean_arch_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  app:
    build: .
    container_name: clean_arch_app
    ports:
      - "8080:8080"  # REST API
      - "8081:8081"  # GraphQL
      - "9090:9090"  # gRPC
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=ramon
      - DB_PASSWORD=1234
      - DB_NAME=clean_arch_db
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - clean_arch_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  clean_arch_network:
    driver: bridge 